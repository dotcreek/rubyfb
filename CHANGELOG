v0.6.3 ==
Fix change_column() migration method
Fix Segmentation fault in Row class (GC integration issues)
Remove deprecated require in rubyfb_adapter.rb
Fix Rails 3.2 "undefined method `accept' for nil:NilClass" - https://github.com/rails/rails/issues/4632
Add Rails 3.2 explain() support

v0.6.2 ==
Update arel visitors
Use round() when scaling fixed parameter values

v0.6.1 ==
Fix incorrect parameter scaling for fixed precision decimals stored in int32, int16 fields
http://rubyforge.org/tracker/index.php?func=detail&aid=29406&group_id=9658&atid=37369
Restore pre 3.0.7 rails compatibility
http://rubyforge.org/tracker/index.php?func=detail&aid=29398&group_id=9658&atid=37369

v0.6.0 ==
API changes:
!!WARNING!!
This version breaks backward compatibility
The major change is that the statement object is no longer tied to a particular
transaction, allowing us to have a prepared statement object for use in diffent transactions.
The transaction is supplied as parameter to the exec*() methods. The removal of the execute()
and execute_for() metods is an intetional API breakage, the exec() method is a direct
drop in replacement for both methods, but the transaction context will change, and
may yeld to unexpected results.
For the brave - alias(:execute_for, :exec); alias(:execute, :exec); will bring back execute*() methods
!!WARNING!!
The Statement constructor signature is chnaged, the recomended way for 
creating new Statement objects is through connection.create_statement() method.
The Statement execute() and execute_for() methods are gone replaced by the new exec() method.
New Statement.exec_and_close() method.
The ResultSet constructor signature is chnaged
The direct usage of the ResultSet constructor is discouraged
Blob.each yields binary strings (no character set conversion is performed,
there is no gurantee that the segments are character aligned)
Code cleanups:
Major rewrite of the Statement code
Major rewrite of the ResultSet code
Major rewrite of the Generator code
Bug fixes:
Fix buffer overflow in Generator code
Fix BLOB parameters handling
A lot of adapter related fixes - rubyfb passes the activerecord 3.1 test suite with 33 failures and 23 errors.
New features:
Prepared statements support
Rails 3.1 + cached statements support

v0.5.9 ==
Fix multibyte string handling for BLOB parameters
Pipe up BLOB encoding when converting to string, or iterating over segments

v0.5.8 ==
Merge duplicated code in transaction.execute() and connection.execute()
Make #fetch() *always* return nil if #exhausted? - pilcrow/look-before-you-leap
Add Fb1.5 compatible arel adapter - at least to some extent
Some words of caution here - the Fb1.5 arel implementation will yield WRONG results with union selects
The Fb15 compatibility mode is turned on by setting Rubyfb::Options.fb15_compat = true in your initialization code
Pipe up field encoding into Ruby 1.9 strings - fix github issue #3
The mapping table from firebird to ruby character set names contains some common character sets,
but is far from complete. The mapping table can be extended/altered in your initializers like this:
Rubyfb::Options.charset_name_map['FIREBIRD_CHARSET_NAME']='RUBY_CHARSET_NAME'

v0.5.7 ==
arel-2.0.7 compatibility - use node.expr for limit/offset clauses
activesupport-3.0.3+ compatibility require_library_or_gem location changed

v0.5.6 ==
Fix rubyforge issue #28870 - by simplifying the Exception class ;) 
Fix rubyforge issue #28860 - rubyfb_adapter.rb and local files as proposed by Leonid Myravjev (asm)
Merge pilcrow-scale branch - introduce column_scale() methods in ResultSet/Row classes thanks to Mike Pomraning (pilcrow)
Drop old unit test suite

v0.5.5 ==
Ruby 1.9 compatibility
Initial Rails 3 support
!!!WARNING!!!
Rails 3 support uses derived tables (Firebird server >= 2.0)
!!!WARNING!!!
DevKit build support (see https://github.com/oneclick/rubyinstaller/wiki/Development-Kit) thanks to Alex Vangelov
updated test suite

v0.5.4 ==
add configurable boolen domain and boolean name match patterns
fix scale handling for view columns
extconf.rb - replace PLATFORM with RUBY_PLATFORM

v0.5.3 ==
rename top module to Rubyfb
!!!WARNING!!!
this change breaks the "drop in" compatibility with FireRuby if FireRuby module name 
was explicitly used. Simple search and replace should do the work

RubyfbAdapter - add support for :sql_role_name connection option
Add new class ProcedureCall - representing firebird stored procedure
Add prepare_call() function to the Rubyfb::Connection class - returning ProcedureCall object
Add execute_procedure(procedure_name, parameter_values) function to the RubyfbAdapter class
Windows build fixes

v0.5.2 ==
Use Echoe as build system
By default release as  "source only" gem
Add binary build rake task - binpkg

v0.5.1 initial version
